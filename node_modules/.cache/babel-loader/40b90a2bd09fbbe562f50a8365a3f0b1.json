{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/front-end/goit-react-hw-04-movies/src/pages/Articles.js\";\nimport React, { Component } from 'react'; // import { Route } from 'react-router-dom';\n\nimport queryString from 'query-string';\nimport CategorySelector from '../components/CategorySelector';\nimport ArticleList from '../components/ArticleList';\nimport * as articleAPI from '../services/articles-api'; // import ArticlePage from './ArticlePage';\n\nconst categories = [{\n  value: 'health',\n  label: 'Health'\n}, {\n  value: 'technology',\n  label: 'Technology'\n}, {\n  value: 'sports',\n  label: 'Sports'\n}];\n\nconst getCategoryWithValue = (allCategories, value) => allCategories.find(c => c.value === value);\n\nconst getCategoryFromLocation = location => queryString.parse(location.search).category;\n\nexport default class Articles extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: []\n    };\n\n    this.handleCategoryChange = opt => {\n      // console.log(opt);\n      if (opt) {\n        return this.props.history.push({ ...this.props.location,\n          search: `category=${opt.value}`\n        });\n      }\n\n      return this.props.history.push({ ...this.props.location,\n        search: ``\n      });\n    };\n  }\n\n  componentDidMount() {\n    const category = getCategoryFromLocation(this.props.location);\n    articleAPI.fetchArticles(category).then(items => this.setState({\n      items\n    }));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevCategory = getCategoryFromLocation(prevProps.location);\n    const nextCategory = getCategoryFromLocation(this.props.location); // console.log('prevCategory: ', prevCategory);\n    // console.log('nextCategory: ', nextCategory);\n\n    if (prevCategory !== nextCategory) {\n      articleAPI.fetchArticles(nextCategory).then(items => this.setState({\n        items\n      }));\n    }\n  }\n\n  render() {\n    const {\n      items\n    } = this.state;\n    const {\n      location\n    } = this.props;\n    const qsCategory = getCategoryFromLocation(location); // console.log(queryString.parse(this.props.location.search));\n\n    const selectedCategory = getCategoryWithValue(categories, qsCategory);\n    console.log(selectedCategory);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"Articles page\"), /*#__PURE__*/React.createElement(CategorySelector, {\n      options: categories,\n      value: selectedCategory,\n      onChange: this.handleCategoryChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ArticleList, {\n      items: items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/apple/Documents/front-end/goit-react-hw-04-movies/src/pages/Articles.js"],"names":["React","Component","queryString","CategorySelector","ArticleList","articleAPI","categories","value","label","getCategoryWithValue","allCategories","find","c","getCategoryFromLocation","location","parse","search","category","Articles","state","items","handleCategoryChange","opt","props","history","push","componentDidMount","fetchArticles","then","setState","componentDidUpdate","prevProps","prevState","prevCategory","nextCategory","render","qsCategory","selectedCategory","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import { Route } from 'react-router-dom';\nimport queryString from 'query-string';\nimport CategorySelector from '../components/CategorySelector';\nimport ArticleList from '../components/ArticleList';\nimport * as articleAPI from '../services/articles-api';\n// import ArticlePage from './ArticlePage';\n\nconst categories = [\n  {\n    value: 'health',\n    label: 'Health',\n  },\n  {\n    value: 'technology',\n    label: 'Technology',\n  },\n  {\n    value: 'sports',\n    label: 'Sports',\n  },\n];\n\nconst getCategoryWithValue = (allCategories, value) =>\n  allCategories.find(c => c.value === value);\nconst getCategoryFromLocation = location =>\n  queryString.parse(location.search).category;\n\nexport default class Articles extends Component {\n  state = { items: [] };\n\n  componentDidMount() {\n    const category = getCategoryFromLocation(this.props.location);\n    articleAPI.fetchArticles(category).then(items => this.setState({ items }));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevCategory = getCategoryFromLocation(prevProps.location);\n    const nextCategory = getCategoryFromLocation(this.props.location);\n\n    // console.log('prevCategory: ', prevCategory);\n    // console.log('nextCategory: ', nextCategory);\n\n    if (prevCategory !== nextCategory) {\n      articleAPI\n        .fetchArticles(nextCategory)\n        .then(items => this.setState({ items }));\n    }\n  }\n\n  handleCategoryChange = opt => {\n    // console.log(opt);\n    if (opt) {\n      return this.props.history.push({\n        ...this.props.location,\n        search: `category=${opt.value}`,\n      });\n    }\n    return this.props.history.push({\n      ...this.props.location,\n      search: ``,\n    });\n  };\n\n  render() {\n    const { items } = this.state;\n    const { location } = this.props;\n    const qsCategory = getCategoryFromLocation(location);\n    // console.log(queryString.parse(this.props.location.search));\n    const selectedCategory = getCategoryWithValue(categories, qsCategory);\n    console.log(selectedCategory);\n\n    return (\n      <div>\n        <h1>Articles page</h1>\n        <CategorySelector\n          options={categories}\n          value={selectedCategory}\n          onChange={this.handleCategoryChange}\n        />\n        <ArticleList items={items} />\n        {/* <Route path={`${this.props.match.path}/:id`} component={ArticlePage} /> */}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}