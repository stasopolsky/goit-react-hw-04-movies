{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/front-end/goit-react-hw-04-movies/src/pages/Movies.js\";\nimport React, { Component } from \"react\";\nimport queryString from \"query-string\";\nimport PropTypes from \"prop-types\";\nimport SearchBar from \"../components/SearchBar\";\nimport * as articleAPI from \"../services/articles-api\";\nexport default class Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      query: \"\",\n      movies: [] // notFound: false,\n\n    };\n\n    this.onChange = value => {\n      this.setState({\n        query: value\n      });\n    };\n  }\n\n  componentDidMount() {\n    const parsed = queryString.parse(this.props.location.search).query;\n\n    if (parsed) {\n      if (parsed !== undefined) {\n        articleAPI.getTrendingMovies(parsed).then(({\n          data\n        }) => {\n          this.setState({\n            movies: data.results\n          });\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SearchBar, {\n      onSubmit: this.handleOnSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nMovies.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  location: PropTypes.shape({\n    search: PropTypes.string.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  }).isRequired\n};","map":{"version":3,"sources":["/Users/apple/Documents/front-end/goit-react-hw-04-movies/src/pages/Movies.js"],"names":["React","Component","queryString","PropTypes","SearchBar","articleAPI","Movies","state","query","movies","onChange","value","setState","componentDidMount","parsed","parse","props","location","search","undefined","getTrendingMovies","then","data","results","render","handleOnSubmit","propTypes","history","shape","push","func","isRequired","string","match","params","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,KAAKC,UAAZ,MAA4B,0BAA5B;AAEA,eAAe,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;AAAA,SAe5CM,KAf4C,GAepC;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,MAAM,EAAE,EAFF,CAGN;;AAHM,KAfoC;;AAAA,SAgC5CC,QAhC4C,GAgChCC,KAAD,IAAW;AACpB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAEG;AAAT,OAAd;AACD,KAlC2C;AAAA;;AAqB5CE,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,MAAM,GAAGZ,WAAW,CAACa,KAAZ,CAAkB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAAtC,EAA8CV,KAA7D;;AACA,QAAIM,MAAJ,EAAY;AACV,UAAIA,MAAM,KAAKK,SAAf,EAA0B;AACxBd,QAAAA,UAAU,CAACe,iBAAX,CAA6BN,MAA7B,EAAqCO,IAArC,CAA0C,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAc;AACtD,eAAKV,QAAL,CAAc;AAAEH,YAAAA,MAAM,EAAEa,IAAI,CAACC;AAAf,WAAd;AACD,SAFD;AAGD;AACF;AACF;;AAMDC,EAAAA,MAAM,GAAG;AACP,wBACE,uDACE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAE,KAAKC,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AA1C2C;AAAzBnB,M,CACZoB,S,GAAY;AACjBC,EAAAA,OAAO,EAAExB,SAAS,CAACyB,KAAV,CAAgB;AACvBC,IAAAA,IAAI,EAAE1B,SAAS,CAAC2B,IAAV,CAAeC;AADE,GAAhB,EAENA,UAHc;AAIjBd,EAAAA,QAAQ,EAAEd,SAAS,CAACyB,KAAV,CAAgB;AACxBV,IAAAA,MAAM,EAAEf,SAAS,CAAC6B,MAAV,CAAiBD;AADD,GAAhB,EAEPA,UANc;AAOjBE,EAAAA,KAAK,EAAE9B,SAAS,CAACyB,KAAV,CAAgB;AACrBM,IAAAA,MAAM,EAAE/B,SAAS,CAACyB,KAAV,CAAgB;AACtBO,MAAAA,EAAE,EAAEhC,SAAS,CAAC6B;AADQ,KAAhB;AADa,GAAhB,EAIJD;AAXc,C","sourcesContent":["import React, { Component } from \"react\";\nimport queryString from \"query-string\";\nimport PropTypes from \"prop-types\";\nimport SearchBar from \"../components/SearchBar\";\nimport * as articleAPI from \"../services/articles-api\";\n\nexport default class Movies extends Component {\n  static propTypes = {\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n      search: PropTypes.string.isRequired,\n    }).isRequired,\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        id: PropTypes.string,\n      }),\n    }).isRequired,\n  };\n\n  state = {\n    query: \"\",\n    movies: [],\n    // notFound: false,\n  };\n\n  componentDidMount() {\n    const parsed = queryString.parse(this.props.location.search).query;\n    if (parsed) {\n      if (parsed !== undefined) {\n        articleAPI.getTrendingMovies(parsed).then(({ data }) => {\n          this.setState({ movies: data.results });\n        });\n      }\n    }\n  }\n\n  onChange = (value) => {\n    this.setState({ query: value });\n  };\n\n  render() {\n    return (\n      <>\n        <SearchBar onSubmit={this.handleOnSubmit} />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}