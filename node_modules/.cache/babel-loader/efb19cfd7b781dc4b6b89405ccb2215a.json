{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/front-end/goit-react-hw-04-movies/src/pages/Movies.js\";\nimport React, { Component } from \"react\";\nimport queryString from \"query-string\";\nimport PropTypes from \"prop-types\";\nimport Searchbar from \"../components/Searchbar\";\nimport * as articleAPI from \"../services/articles-api\";\nexport default class Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      input: \"\",\n      data: [] // notFound: false,\n\n    };\n\n    this.handleOnSubmit = e => {\n      // e.preventDefault();\n      this.setState({\n        data: [],\n        query: e\n      });\n    };\n  }\n\n  // componentDidMount() {\n  //   const { location } = this.props;\n  //   const { query } = queryString.parse(location.search);\n  //   if (query) {\n  //     articleAPI\n  //       .getMoviesQuery(query)\n  //       .then();\n  //     // .catch((error) => this.apiError(error));\n  //   }\n  // }\n  componentDidUpdate(prevProps) {\n    const {\n      location\n    } = this.props;\n    const {\n      query\n    } = queryString.parse(location.search);\n\n    if (prevProps.location.search !== location.search) {\n      articleAPI.getMoviesQuery(query).then(data => console.log(data)); // .catch((error) => this.apiError(error));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Searchbar, {\n      onSubmit: this.handleOnSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nMovies.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  location: PropTypes.shape({\n    search: PropTypes.string.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  }).isRequired\n};","map":{"version":3,"sources":["/Users/apple/Documents/front-end/goit-react-hw-04-movies/src/pages/Movies.js"],"names":["React","Component","queryString","PropTypes","Searchbar","articleAPI","Movies","state","input","data","handleOnSubmit","e","setState","query","componentDidUpdate","prevProps","location","props","parse","search","getMoviesQuery","then","console","log","render","propTypes","history","shape","push","func","isRequired","string","match","params","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,KAAKC,UAAZ,MAA4B,0BAA5B;AAEA,eAAe,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;AAAA,SAe5CM,KAf4C,GAepC;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,IAAI,EAAE,EAFA,CAGN;;AAHM,KAfoC;;AAAA,SA0C5CC,cA1C4C,GA0C1BC,CAAD,IAAO;AACtB;AACA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYI,QAAAA,KAAK,EAAEF;AAAnB,OAAd;AACD,KA7C2C;AAAA;;AAqB5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAG,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,UAAM;AAAEJ,MAAAA;AAAF,QAAYX,WAAW,CAACgB,KAAZ,CAAkBF,QAAQ,CAACG,MAA3B,CAAlB;;AAEA,QAAIJ,SAAS,CAACC,QAAV,CAAmBG,MAAnB,KAA8BH,QAAQ,CAACG,MAA3C,EAAmD;AACjDd,MAAAA,UAAU,CAACe,cAAX,CAA0BP,KAA1B,EAAiCQ,IAAjC,CAAuCZ,IAAD,IAAUa,OAAO,CAACC,GAAR,CAAYd,IAAZ,CAAhD,EADiD,CAEjD;AACD;AACF;;AAODe,EAAAA,MAAM,GAAG;AACP,wBACE,uDACE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAE,KAAKd,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AArD2C;AAAzBJ,M,CACZmB,S,GAAY;AACjBC,EAAAA,OAAO,EAAEvB,SAAS,CAACwB,KAAV,CAAgB;AACvBC,IAAAA,IAAI,EAAEzB,SAAS,CAAC0B,IAAV,CAAeC;AADE,GAAhB,EAENA,UAHc;AAIjBd,EAAAA,QAAQ,EAAEb,SAAS,CAACwB,KAAV,CAAgB;AACxBR,IAAAA,MAAM,EAAEhB,SAAS,CAAC4B,MAAV,CAAiBD;AADD,GAAhB,EAEPA,UANc;AAOjBE,EAAAA,KAAK,EAAE7B,SAAS,CAACwB,KAAV,CAAgB;AACrBM,IAAAA,MAAM,EAAE9B,SAAS,CAACwB,KAAV,CAAgB;AACtBO,MAAAA,EAAE,EAAE/B,SAAS,CAAC4B;AADQ,KAAhB;AADa,GAAhB,EAIJD;AAXc,C","sourcesContent":["import React, { Component } from \"react\";\nimport queryString from \"query-string\";\nimport PropTypes from \"prop-types\";\nimport Searchbar from \"../components/Searchbar\";\nimport * as articleAPI from \"../services/articles-api\";\n\nexport default class Movies extends Component {\n  static propTypes = {\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n      search: PropTypes.string.isRequired,\n    }).isRequired,\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        id: PropTypes.string,\n      }),\n    }).isRequired,\n  };\n\n  state = {\n    input: \"\",\n    data: [],\n    // notFound: false,\n  };\n\n  // componentDidMount() {\n  //   const { location } = this.props;\n  //   const { query } = queryString.parse(location.search);\n  //   if (query) {\n  //     articleAPI\n  //       .getMoviesQuery(query)\n  //       .then();\n  //     // .catch((error) => this.apiError(error));\n  //   }\n  // }\n\n  componentDidUpdate(prevProps) {\n    const { location } = this.props;\n    const { query } = queryString.parse(location.search);\n\n    if (prevProps.location.search !== location.search) {\n      articleAPI.getMoviesQuery(query).then((data) => console.log(data));\n      // .catch((error) => this.apiError(error));\n    }\n  }\n\n  handleOnSubmit = (e) => {\n    // e.preventDefault();\n    this.setState({ data: [], query: e });\n  };\n\n  render() {\n    return (\n      <>\n        <Searchbar onSubmit={this.handleOnSubmit} />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}